





 GET vs POST

    1. HTTP
        => 웹상에서 클라이언트와 서버 간에 요청/응답으로 데이터를 주고 받을 수 있는 프로토콜
    2. GET
        => 서버로부터 정보를 조회하기 위해 설계된 메소드
        => Get은 요청을 전송할 때 필요한 데이터를 Body에 담지 않고, 쿼리스트링을 통해 전송한다.
        => URL의 끝에 ?와 함꼐 이름과 값으로 쌍을 이루는 요청 파라미터를 쿼리스트링이라고 부른다.
        => 요청 파라미터가 여러 개이면 &으로 연결한다.
        => ex) www.example-url.com/resources?name1=value1&name2=value2
        => Get은 불필요한 요청을 제한하기 위해 요청이 캐시될 수 있다.
        => 브라우저의 캐시를 지워주면 다시 컨텐츠를 조회하기 위해 서버로 요청을 보내게 된다.

    3. POST
        => 서버의 리소스를 생성/변경 하기 위해 설계 되었다.
        => HTTP 메세지의 Body에 담아서 전송한다. (길이에 제한이 없다.)
        => 대용량 데이터를 전송할 수 있다.
        => 민감한 데이터의 경우는 암호화하여 전송한다.

    4. GET vs POST
        => GET : Idempotent(수학이나 전산학에서 연산의 한 성질을 나타내는 것으로, 연산을 여러 번 적용하더라도 결과가 달라지지 않는 성질)
        => POST : non-Idempotent
        => GET이 Idempotent하도록 설계되었다는 것은 GET으로 서버에게 동일한 요청을 여러 번 전송하더라도 동일한 응답이 돌아와야 한다는 것을 의미
             ㄴ 이에 따라 GET은 설계원칙에 따라 서버의 데이터나 상태를 변경시키지 않아야 Idempotent하기 때문에 주로 조회를 할 때에 사용해야합니다.
        => POST는 Non-idempotent하기 때문에 서버에게 동일한 요청을 여러 번 전송해도 응답은 항상 다르다.
             ㄴ POST는 서버의 상태나 데이터를 변경시킬 때 사용
             ㄴ 게시글을 쓰면 서버에 게시글이 저장이 되고,게시글을 삭제하면 해당 데이터가 없어지는 등 POST로 요청을 하게 되면 서버의 무언가는 변경되도록 사용됩니다.
             ㄴ POST는 생성, 수정, 삭제에 사용할 수 있지만, 생성에는 POST, 수정은 PUT 또는 PATCH, 삭제는 DELETE가 더 용도에 맞는 메소드라고 할 수 있습니다.
